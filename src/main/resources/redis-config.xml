<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

<!--    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
<!--        <property name="locations">-->
<!--            <list>-->
<!--                <value>classpath:redis.properties</value>-->
<!--            </list>-->
<!--        </property>-->
<!--        &lt;!&ndash; 外部配置文件 数据出错 保证代码继续运行 &ndash;&gt;-->
<!--        <property name="ignoreUnresolvablePlaceholders" value="true"></property>-->
<!--    </bean>-->
<!-- <context:property-placeholder ignore-unresolvable="true" location="classpath:redis.properties" />-->


    <bean id="poolconfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxTotal" value="${redis.pool.maxTotal}" />
        <property name="maxIdle" value="${redis.pool.maxIdle}" />
        <property name="minIdle" value="${redis.pool.minIdle}" />
        <property name="lifo" value="${redis.pool.lifo}" />
        <property name="maxWaitMillis" value="${redis.pool.maxWait}" />
        <property name="testOnBorrow" value="true" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnReturn" value="true" />
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="false" />
        <!-- 表示一个对象至少停留在idle状态的最短时间;然后才能被idle object evitor扫描并驱逐 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
    </bean>

    <bean id="sharedJedisPool" class="redis.clients.jedis.ShardedJedisPool">
        <constructor-arg index="0" ref="poolconfig"></constructor-arg>
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis.uri.0}"></constructor-arg>
                </bean>
                <!-- <bean class="redis.clients.jedis.JedisShardInfo">
                    <constructor-arg index="0" value="${redis.uri.1}"></constructor-arg>
                </bean> -->
            </list>
        </constructor-arg>
    </bean>
</beans>